// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: mTawmMctuzdStwJ4K4xuHv
// Component: FWbQM22pU5s

import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import YouTube from "@plasmicpkgs/react-youtube"; // plasmic-import: CHO21V9uYw/codeComponent
import Button from "../../Button"; // plasmic-import: RcaKkhzh0zU3/component

import { useScreenVariants as useScreenVariantsyuw9WtO5Ru6N } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: yuw9wtO5ru6n/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_classy_agency_website.module.css"; // plasmic-import: mTawmMctuzdStwJ4K4xuHv/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: FWbQM22pU5s/css

import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: jX7vnri2DYqA/icon
import Icon21Icon from "./icons/PlasmicIcon__Icon21"; // plasmic-import: IbqmpCrCzgxw/icon
import Icon8Icon from "./icons/PlasmicIcon__Icon8"; // plasmic-import: FDnUtqbc7zS-/icon
import Icon18Icon from "./icons/PlasmicIcon__Icon18"; // plasmic-import: MegW5WjeeHmy/icon
import Icon22Icon from "./icons/PlasmicIcon__Icon22"; // plasmic-import: ZvzqWjsTsci8/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: s7fB-T304phC/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: _oK_sdYky_IZ/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: n9Kj323haLqE/icon
import Icon28Icon from "./icons/PlasmicIcon__Icon28"; // plasmic-import: J8GZrFDM4GDW/icon
import image3E7Iy4QcKc from "../hawking_web/images/image3.png"; // plasmic-import: E7IY4qcKC/picture
import pexelsTimMossholder1154739JpgUiNpwEgL0Qef from "./images/pexelsTimMossholder1154739Jpg.jpg"; // plasmic-import: UINpwEgL0QEF/picture
import pexelsSolomanSoh1492232JpgQiR2N7XzKkYi from "./images/pexelsSolomanSoh1492232Jpg.jpg"; // plasmic-import: QiR2n7xzKkYi/picture

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  foreground2?: p.Flex<"div">;
  h1?: p.Flex<"h1">;
  span?: p.Flex<"span">;
  youTube?: p.Flex<typeof YouTube>;
  foreground?: p.Flex<"div">;
  foreground3?: p.Flex<"div">;
  imagotipoHawkinig?: p.Flex<typeof p.PlasmicImg>;
  mail?: p.Flex<"div">;
};

export interface DefaultHomepageProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const [$queries, setDollarQueries] = React.useState({});

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsyuw9WtO5Ru6N()
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__rpekh)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__o3P8N)}
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__j0Ka2)}
                displayHeight={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? ("130px" as const)
                    : ("170px" as const)
                }
                displayMaxHeight={"none" as const}
                displayMaxWidth={"none" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? ("130px" as const)
                    : ("170px" as const)
                }
                src={{
                  src: image3E7Iy4QcKc,
                  fullWidth: 2480,
                  fullHeight: 2480,
                  aspectRatio: undefined
                }}
              />

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__a6XfN)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__i2SYa
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Services"
                    : "Services"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___1IRsk
                  )}
                >
                  {"Features"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___0V7It
                  )}
                >
                  {"work"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__v9FkM
                  )}
                >
                  {"Contact"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___4L1Qj
                  )}
                >
                  {"Company"}
                </div>
                {false ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__tTblL)}
                  >
                    <button
                      className={classNames(
                        projectcss.all,
                        projectcss.button,
                        projectcss.__wab_text,
                        sty.button__ct66G
                      )}
                    >
                      {"Sign up"}
                    </button>
                    <p.Stack
                      as={"a"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__uUhHu
                      )}
                    >
                      {false ? (
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__rbpHq)}
                          role={"img"}
                        />
                      ) : null}
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__t3Wv
                        )}
                      >
                        {"Log in"}
                      </div>
                      {false ? (
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__as1Cb)}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>
                  </div>
                ) : null}
              </p.Stack>
            </p.Stack>
            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground2"}
              data-plasmic-override={overrides.foreground2}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground2)}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__wzUpw)}
                >
                  <h1
                    data-plasmic-name={"h1"}
                    data-plasmic-override={overrides.h1}
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{"We help you craft "}</React.Fragment>
                      {
                        <span
                          data-plasmic-name={"span"}
                          data-plasmic-override={overrides.span}
                          className={classNames(
                            projectcss.all,
                            projectcss.span,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.span
                          )}
                        >
                          {"high-end"}
                        </span>
                      }
                      <React.Fragment>{" digital experiences."}</React.Fragment>
                    </React.Fragment>
                  </h1>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___6GcIt
                    )}
                  >
                    {"BRAND | PRODUCT | DIGITAL"}
                  </div>
                </p.Stack>
              ) : null}
            </p.Stack>
            <YouTube
              data-plasmic-name={"youTube"}
              data-plasmic-override={overrides.youTube}
              className={classNames("__wab_instance", sty.youTube)}
              color={"red" as const}
              controls={false}
              fs={false}
              modestbranding={true}
              mute={true}
              playsinline={false}
              rel={false}
              videoId={"esuhX076ZCY" as const}
            />
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__ytWvf)}>
            <div className={classNames(projectcss.all, sty.freeBox__b1CBg)}>
              <div className={classNames(projectcss.all, sty.freeBox__qyaYg)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__gMJdY
                  )}
                >
                  {"SERVICES"}
                </div>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__s5U4A
                  )}
                >
                  {"We help you stand out from the crowd."}
                </h2>
                <section
                  className={classNames(projectcss.all, sty.section__avMl9)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"foreground"}
                    data-plasmic-override={overrides.foreground}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.foreground)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__nWmLa)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__c4Zvh
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__yg6Mn
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__r6CyV
                            )}
                          >
                            <Icon21Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__kFkA2
                              )}
                              role={"img"}
                            />
                          </div>
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__l05Bu
                              )}
                            >
                              <Icon8Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__r33LW
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___2Up9A
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__tlM7D
                              )}
                            >
                              {"BRAND"}
                            </h3>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__riPlN
                              )}
                            >
                              {
                                "Nulla odio mauris enim parturient adipiscing vestibulum inceptos."
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__dmTiR
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__ebrjg
                            )}
                          >
                            <Icon18Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__njv7V
                              )}
                              role={"img"}
                            />
                          </div>
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__cqLok
                              )}
                            >
                              <Icon8Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___5DjMj
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__uikRn
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__vtPbt
                              )}
                            >
                              {"PRODUCT"}
                            </h3>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__kfBnQ
                              )}
                            >
                              {
                                "Consequat scelerisque a eros taciti nisl a sodales."
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___8EUd1
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___7HqDo
                            )}
                          >
                            <Icon22Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__j3MTu
                              )}
                              role={"img"}
                            />
                          </div>
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__c99Iu
                              )}
                            >
                              <Icon8Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__jubcz
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__fSrHn
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3___5TkWj
                              )}
                            >
                              {"DIGITAL"}
                            </h3>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__yEzKd
                              )}
                            >
                              {
                                "Varius ad malesuada ullamcorper cursus scelerisque a a."
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </section>
              </div>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__ljn0J)}>
            <div className={classNames(projectcss.all, sty.freeBox__kI8D)}>
              <div className={classNames(projectcss.all, sty.freeBox__jlgZm)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__irJeP
                  )}
                >
                  {"WORK"}
                </div>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__zBw87
                  )}
                >
                  {"Let our work speak for itself."}
                </h2>
                <section
                  className={classNames(projectcss.all, sty.section__rSjVo)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"foreground3"}
                    data-plasmic-override={overrides.foreground3}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.foreground3)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__vL6Or)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__it5RP
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__kn819
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__elPf4
                            )}
                          >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__ry58J)}
                              displayHeight={"auto" as const}
                              displayMaxHeight={"none" as const}
                              displayMaxWidth={"100%" as const}
                              displayMinHeight={"0" as const}
                              displayMinWidth={"0" as const}
                              displayWidth={"auto" as const}
                              loading={"lazy" as const}
                              src={{
                                src: pexelsTimMossholder1154739JpgUiNpwEgL0Qef,
                                fullWidth: 1920,
                                fullHeight: 1280,
                                aspectRatio: undefined
                              }}
                            />
                          </div>
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__utWd4
                              )}
                            >
                              <Icon8Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__jBwEw
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__kbPnh
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__eGpF0
                              )}
                            >
                              {"Heading main Lorem"}
                            </h3>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ot12W
                              )}
                            >
                              {
                                "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the "
                              }
                            </div>
                            {true ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox___9SYkB
                                )}
                              >
                                <Button
                                  color={"softYellow" as const}
                                  submitsForm={true}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__elvJa
                                    )}
                                  >
                                    {"Read More"}
                                  </div>
                                </Button>
                              </div>
                            ) : null}
                          </p.Stack>
                        </p.Stack>
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__yczmo
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__bqei
                            )}
                          >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__xqr6U)}
                              displayHeight={"auto" as const}
                              displayMaxHeight={"none" as const}
                              displayMaxWidth={"100%" as const}
                              displayMinHeight={"0" as const}
                              displayMinWidth={"0" as const}
                              displayWidth={"auto" as const}
                              loading={"lazy" as const}
                              src={{
                                src: pexelsSolomanSoh1492232JpgQiR2N7XzKkYi,
                                fullWidth: 4000,
                                fullHeight: 2667,
                                aspectRatio: undefined
                              }}
                            />
                          </div>
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__vbVd8
                              )}
                            >
                              <Icon8Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__cS9PL
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__cuzE0
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__mGlaz
                              )}
                            >
                              {"Heading main Lorem"}
                            </h3>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__voJlr
                              )}
                            >
                              {
                                "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the "
                              }
                            </div>
                            {true ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__iKwUn
                                )}
                              >
                                <Button
                                  color={"softYellow" as const}
                                  submitsForm={true}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__qvi57
                                    )}
                                  >
                                    {"Read More"}
                                  </div>
                                </Button>
                              </div>
                            ) : null}
                          </p.Stack>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </section>
              </div>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__fRnUk)}>
            <div className={classNames(projectcss.all, sty.freeBox__hqo7H)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ySma6
                )}
              >
                {"CLIENTS"}
              </div>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__mn3S3
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Our Client brands"
                  : "We've been lucky to work with some great companies."}
              </h2>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__pFqEe)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__au9Ox)}
                  displayHeight={"48px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={
                    "https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-loom.svg" as const
                  }
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__ocYyf)}
                  displayHeight={"48px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={
                    "https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-strapi.svg" as const
                  }
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__bu1V0)}
                  displayHeight={"48px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={
                    "https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-segment.svg" as const
                  }
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__g11K)}
                  displayHeight={"48px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={
                    "https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-xstate.svg" as const
                  }
                />
              </p.Stack>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__oDWfF)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___4Grve)}
                  displayHeight={"96px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"96px" as const}
                  src={
                    "https://www.caa.com/sites/default/files/styles/headshot_500x500/public/speaker-headshots/Morgan_CAAspeakers_Heashot_Web.jpg?itok=WCOhQ1Hj" as const
                  }
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__skm2L
                  )}
                >
                  {
                    "Lorem Ipsum is simply dummy text of the printing and typesetting industry. "
                  }
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__kiS
                  )}
                >
                  {"Lorem, TGS"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__rixDa
                  )}
                >
                  {"Company name lorem"}
                </div>
              </p.Stack>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__zxWvY)}>
            <div className={classNames(projectcss.all, sty.freeBox___1YlpS)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__sxsme)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__aSlZa)}
                >
                  <p.PlasmicImg
                    data-plasmic-name={"imagotipoHawkinig"}
                    data-plasmic-override={overrides.imagotipoHawkinig}
                    alt={""}
                    className={classNames(sty.imagotipoHawkinig)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"192px" as const}
                    src={{
                      src: image3E7Iy4QcKc,
                      fullWidth: 2480,
                      fullHeight: 2480,
                      aspectRatio: undefined
                    }}
                  />

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__vrMeV)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eFl2K
                      )}
                    >
                      {"Contactanos"}
                    </div>
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__ujoZn)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__oj0YJ)}
                        role={"img"}
                      />

                      <Icon2Icon
                        className={classNames(projectcss.all, sty.svg__dyFxf)}
                        role={"img"}
                      />

                      <Icon28Icon
                        className={classNames(projectcss.all, sty.svg___9QQcd)}
                        role={"img"}
                      />
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__ebEm5)}
                >
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__w9U9J
                    )}
                  >
                    {"Navigation"}
                  </h3>
                  <p.Stack
                    as={"a"}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__y0Q8
                    )}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__i0X0S)}
                        role={"img"}
                      />
                    ) : null}
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gkSo9
                      )}
                    >
                      {"Nav link"}
                    </div>
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__uvSxa)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>
                  <p.Stack
                    as={"a"}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__jMyIe
                    )}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg___0GGpa)}
                        role={"img"}
                      />
                    ) : null}
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nid6C
                      )}
                    >
                      {"Nav link"}
                    </div>
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__geMwt)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>
                  <p.Stack
                    as={"a"}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__afeGh
                    )}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg___7VM8J)}
                        role={"img"}
                      />
                    ) : null}
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qjGiC
                      )}
                    >
                      {"Nav link"}
                    </div>
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg___0Twiz)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__pp17X)}
                >
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__fy00E
                    )}
                  >
                    {"Support"}
                  </h3>
                  <p.Stack
                    as={"a"}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__u0CK5
                    )}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__ywzqT)}
                        role={"img"}
                      />
                    ) : null}
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rdB9C
                      )}
                    >
                      {"Link"}
                    </div>
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__hzFuC)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>
                  <p.Stack
                    as={"a"}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__ywjbw
                    )}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__lREh)}
                        role={"img"}
                      />
                    ) : null}
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___50Mf
                      )}
                    >
                      {"FAQs"}
                    </div>
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__olcnG)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>
                  <p.Stack
                    as={"a"}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___6F7Xh
                    )}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__yuNzA)}
                        role={"img"}
                      />
                    ) : null}
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___8LPK
                      )}
                    >
                      {"Status"}
                    </div>
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg___4W7Dt)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>
                  <p.Stack
                    as={"a"}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__cdSk5
                    )}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__i2U5J)}
                        role={"img"}
                      />
                    ) : null}
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fkRCz
                      )}
                    >
                      {"Link"}
                    </div>
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg___4BSm5)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__xpK1)}
                >
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__fdZjx
                    )}
                  >
                    {"Address"}
                  </h3>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__h46Qz
                    )}
                  >
                    {"1223 Lorem state22\n1234 XYA VARE"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vOeZd
                    )}
                  >
                    {"Phone:  214141414114"}
                  </div>
                  <div
                    data-plasmic-name={"mail"}
                    data-plasmic-override={overrides.mail}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.mail
                    )}
                  >
                    {"Email:  hawking.innovations@gmail.com"}
                  </div>
                </p.Stack>
              </p.Stack>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__yNzEo
                )}
              >
                <React.Fragment>
                  <React.Fragment>
                    {
                      "\u00a9 Hawking Innovations. All rights reserved. Site proudly built with "
                    }
                  </React.Fragment>
                  {
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        projectcss.plasmic_default__inline,
                        sty.link__psQik
                      )}
                    >
                      {"Plasmic"}
                    </a>
                  }
                  <React.Fragment>{"."}</React.Fragment>
                </React.Fragment>
              </div>
            </div>
          </div>
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "foreground2",
    "h1",
    "span",
    "youTube",
    "foreground",
    "foreground3",
    "imagotipoHawkinig",
    "mail"
  ],
  foreground2: ["foreground2", "h1", "span"],
  h1: ["h1", "span"],
  span: ["span"],
  youTube: ["youTube"],
  foreground: ["foreground"],
  foreground3: ["foreground3"],
  imagotipoHawkinig: ["imagotipoHawkinig"],
  mail: ["mail"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  foreground2: "div";
  h1: "h1";
  span: "span";
  youTube: typeof YouTube;
  foreground: "div";
  foreground3: "div";
  imagotipoHawkinig: typeof p.PlasmicImg;
  mail: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    foreground2: makeNodeComponent("foreground2"),
    h1: makeNodeComponent("h1"),
    span: makeNodeComponent("span"),
    youTube: makeNodeComponent("youTube"),
    foreground: makeNodeComponent("foreground"),
    foreground3: makeNodeComponent("foreground3"),
    imagotipoHawkinig: makeNodeComponent("imagotipoHawkinig"),
    mail: makeNodeComponent("mail"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "back",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
